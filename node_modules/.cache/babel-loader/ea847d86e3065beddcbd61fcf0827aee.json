{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/lepau/src/ZOE Inc/zoe-inc-and-associates-project/zoe-inc-and-associates/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/lepau/src/ZOE Inc/zoe-inc-and-associates-project/zoe-inc-and-associates/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/lepau/src/ZOE Inc/zoe-inc-and-associates-project/zoe-inc-and-associates/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useSelector}from'react-redux';import{collection,getDocs,getFirestore}from\"firebase/firestore\";import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableCell from'@mui/material/TableCell';import TableContainer from'@mui/material/TableContainer';import TableHead from'@mui/material/TableHead';import TableRow from'@mui/material/TableRow';import{Box,Button,Paper,Typography}from'@mui/material';import DeleteForeverSharpIcon from'@mui/icons-material/DeleteForeverSharp';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mapUserState=function mapUserState(_ref){var user=_ref.user;return{currentUser:user.currentUser};};var mapUserDataState=function mapUserDataState(_ref2){var user=_ref2.user;return{userProfileData:user.userProfileData};};export default function Admin(){var _useSelector=useSelector(mapUserState),currentUser=_useSelector.currentUser;var _useSelector2=useSelector(mapUserDataState),userProfileData=_useSelector2.userProfileData;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var db=getFirestore();var fetchAllUsers=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var querySnapshot;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getDocs(collection(db,\"users\"));case 2:querySnapshot=_context.sent;// querySnapshot.docs.forEach((doc) => { \n//     console.log(doc.data().displayName, \" => \", doc.data());\n// })\nsetUsers(querySnapshot.docs);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchAllUsers(){return _ref3.apply(this,arguments);};}();// \n//     return querySnapshot.docs\n//     \n//     //   doc.data() is never undefined for query doc snapshots\n//       \n// console.log(fetchAllUsers())\nuseEffect(function(){fetchAllUsers();},[]);// {\n//     \"userRoles\": [\n//         \"user\"\n//     ],\n//     \"email\": \"tester@test.com\",\n//     \"createdDate\": {\n//         \"seconds\": 1664129856,\n//         \"nanoseconds\": 305000000\n//     },\n//     \"displayName\": \"Tester\"\n// }\nreturn/*#__PURE__*/ (// <div style={{paddingTop:50}}>{userProfileData.userRoles[0] === 'user' ? 'YOU ARE NOT AN ADMIN' : 'WELCOME ADMIN'}</div>\n_jsx(Box,{sx:{pt:10,backgroundColor:'dodgerblue',height:'100vh'},children:userProfileData.userRoles[0]==='admin'?/*#__PURE__*/_jsx(TableContainer,{component:Paper,sx:{width:'100%'},children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650,backgroundColor:'dodgerblue'},size:\"small\",\"aria-label\":\"a dense table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"white\",fontWeight:\"bold\",children:\"Name\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"white\",fontWeight:\"bold\",children:\"Email\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"white\",fontWeight:\"bold\",children:\"User Role\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"white\",fontWeight:\"bold\",children:\"Date Created\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"white\",fontWeight:\"bold\",children:\"Delete\"})})]})}),/*#__PURE__*/_jsx(TableBody,{children:users.map(function(user,index){var date=new Date(user.data().createdDate.seconds*1000);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"yellow\",children:user.data().displayName?user.data().displayName:'NO NAME WAS ENTERED'})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"yellow\",children:user.data().email})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"yellow\",children:user.data().userRoles[0]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{color:\"yellow\",children:date.toDateString()})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Button,{children:/*#__PURE__*/_jsx(DeleteForeverSharpIcon,{})})})]},index);})})]})}):/*#__PURE__*/_jsx(Typography,{children:\"You do not have the right privalages to view this page\"})}));}{/* <TableContainer component={Paper} sx={{width:'100%'}}>\r\n            <Table sx={{ minWidth: 650, backgroundColor:'dodgerblue'}} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Name</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Email</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>User Role</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Date Created</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Delete</Typography></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {users.map((user, index) => {\r\n                        const date = new Date(user.data().createdDate.seconds * 1000)\r\n                        return(\r\n                        <TableRow key={index}>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().displayName ? user.data().displayName : 'NO NAME WAS ENTERED'}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().email}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().userRoles[0]}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{date.toDateString()}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button>\r\n                                    <DeleteForeverSharpIcon />\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer> */}","map":{"version":3,"names":["React","useState","useEffect","useSelector","collection","getDocs","getFirestore","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Box","Button","Paper","Typography","DeleteForeverSharpIcon","mapUserState","user","currentUser","mapUserDataState","userProfileData","Admin","users","setUsers","db","fetchAllUsers","querySnapshot","docs","pt","backgroundColor","height","userRoles","width","minWidth","map","index","date","Date","data","createdDate","seconds","displayName","email","toDateString"],"sources":["C:/Users/lepau/src/ZOE Inc/zoe-inc-and-associates-project/zoe-inc-and-associates/src/Pages/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Box, Button, Paper, Typography, } from '@mui/material';\r\nimport DeleteForeverSharpIcon from '@mui/icons-material/DeleteForeverSharp';\r\n\r\n\r\nconst mapUserState = ({user}) => ({\r\n    currentUser: user.currentUser\r\n})\r\n\r\nconst mapUserDataState = ({user}) => ({\r\n    userProfileData: user.userProfileData\r\n})\r\n\r\nexport default function Admin() {\r\n\r\n    const { currentUser } = useSelector(mapUserState)\r\n    const { userProfileData } = useSelector(mapUserDataState)\r\n    const [users, setUsers] = useState([])\r\n    const db = getFirestore()\r\n\r\n    const fetchAllUsers = async () => {\r\n        const querySnapshot = await getDocs(collection(db, \"users\"));\r\n        // querySnapshot.docs.forEach((doc) => { \r\n        //     console.log(doc.data().displayName, \" => \", doc.data());\r\n        // })\r\n        setUsers(querySnapshot.docs)\r\n    };\r\n\r\n    // \r\n    //     return querySnapshot.docs\r\n    //     \r\n    //     //   doc.data() is never undefined for query doc snapshots\r\n    //       \r\n\r\n    \r\n    // console.log(fetchAllUsers())\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [])\r\n\r\n    // {\r\n    //     \"userRoles\": [\r\n    //         \"user\"\r\n    //     ],\r\n    //     \"email\": \"tester@test.com\",\r\n    //     \"createdDate\": {\r\n    //         \"seconds\": 1664129856,\r\n    //         \"nanoseconds\": 305000000\r\n    //     },\r\n    //     \"displayName\": \"Tester\"\r\n    // }\r\n    \r\n    \r\n\r\n  return (\r\n    // <div style={{paddingTop:50}}>{userProfileData.userRoles[0] === 'user' ? 'YOU ARE NOT AN ADMIN' : 'WELCOME ADMIN'}</div>\r\n    <Box sx={{pt: 10, backgroundColor:'dodgerblue', height:'100vh'}}>\r\n        {userProfileData.userRoles[0] === 'admin' ? <TableContainer component={Paper} sx={{width:'100%'}}>\r\n            <Table sx={{ minWidth: 650, backgroundColor:'dodgerblue'}} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Name</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Email</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>User Role</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Date Created</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Delete</Typography></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {users.map((user, index) => {\r\n                        const date = new Date(user.data().createdDate.seconds * 1000)\r\n                        return(\r\n                        <TableRow key={index}>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().displayName ? user.data().displayName : 'NO NAME WAS ENTERED'}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().email}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().userRoles[0]}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{date.toDateString()}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button>\r\n                                    <DeleteForeverSharpIcon />\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>  : <Typography>You do not have the right privalages to view this page</Typography>}\r\n    </Box>\r\n  )\r\n}\r\n\r\n{/* <TableContainer component={Paper} sx={{width:'100%'}}>\r\n            <Table sx={{ minWidth: 650, backgroundColor:'dodgerblue'}} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Name</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Email</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>User Role</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Date Created</Typography></TableCell>\r\n                        <TableCell><Typography color='white' fontWeight='bold'>Delete</Typography></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {users.map((user, index) => {\r\n                        const date = new Date(user.data().createdDate.seconds * 1000)\r\n                        return(\r\n                        <TableRow key={index}>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().displayName ? user.data().displayName : 'NO NAME WAS ENTERED'}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().email}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{user.data().userRoles[0]}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Typography color='yellow'>{date.toDateString()}</Typography>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button>\r\n                                    <DeleteForeverSharpIcon />\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer> */}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}